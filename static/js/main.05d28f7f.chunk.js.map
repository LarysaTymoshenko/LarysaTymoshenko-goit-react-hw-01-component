{"version":3,"sources":["components/Profile/Profile.module.css","components/FriendList/FriendList.module.css","components/Statictics/Statistics.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Profile/Profile.jsx","components/Statictics/Statistics.jsx","helpers/colorSwitch.js","components/FriendList/FiendsList.jsx","components/TransactionHistory/TransactionHistory.jsx","components/App/App.jsx","index.js"],"names":["module","exports","Profile","username","avatar","tag","location","stats","className","s","profile","description","src","alt","user","label","quantity","followers","views","likes","Statistics","title","container","item","map","id","percentage","list","style","backgroundColor","Math","floor","random","FriendList","friends","name","isOnline","status","green","red","width","TransactionHistory","items","table","head","row","type","amount","currency","App","users","data","friend","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,MAAQ,uBAAuB,KAAO,sBAAsB,SAAW,0BAA0B,IAAM,qBAAqB,SAAW,4B,gBCAvOD,EAAOC,QAAU,CAAC,KAAO,yBAAyB,IAAM,wBAAwB,MAAQ,0BAA0B,KAAO,yBAAyB,OAAS,2BAA2B,KAAO,2B,gBCA7LD,EAAOC,QAAU,CAAC,UAAY,8BAA8B,MAAQ,0BAA0B,KAAO,yBAAyB,KAAO,yBAAyB,MAAQ,4B,0PCAtKD,EAAOC,QAAU,CAAC,MAAQ,kCAAkC,KAAO,iCAAiC,IAAM,kC,88FCwC3FC,EAtCC,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,SAAUC,EAAmC,EAAnCA,OAAQC,EAA2B,EAA3BA,IAAKC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAClD,OACE,sBAAKC,UAAWC,IAAEC,QAAlB,UACE,sBAAKF,UAAWC,IAAEE,YAAlB,UACE,qBAAKC,IAAKR,EAAQS,IAAKV,EAAUK,UAAWC,IAAEL,SAC9C,mBAAGI,UAAWC,IAAEK,KAAhB,SAAuBX,IACvB,oBAAGK,UAAWC,IAAEJ,IAAhB,cAAuBA,KACvB,mBAAGG,UAAWC,IAAEH,SAAhB,SAA2BA,OAG7B,qBAAIE,UAAWC,IAAEF,MAAjB,UACE,+BACE,sBAAMC,UAAWC,IAAEM,MAAnB,uBACA,sBAAMP,UAAWC,IAAEO,SAAnB,SAA8BT,EAAMU,eAEtC,+BACE,sBAAMT,UAAWC,IAAEM,MAAnB,mBACA,sBAAMP,UAAWC,IAAEO,SAAnB,SAA8BT,EAAMW,WAEtC,+BACE,sBAAMV,UAAWC,IAAEM,MAAnB,mBACA,sBAAMP,UAAWC,IAAEO,SAAnB,SAA8BT,EAAMY,kB,oBCpB/B,SAASC,EAAT,GAAuC,IAAjBC,EAAgB,EAAhBA,MAAOd,EAAS,EAATA,MAC1C,OACE,sBAAKC,UAAWC,IAAEa,UAAlB,UACE,oBAAId,UAAWC,IAAEY,MAAjB,SAAyBA,IACzB,oBAAIb,UAAWC,IAAEc,KAAjB,SACGhB,EAAMiB,KAAI,gBAAEC,EAAF,EAAEA,GAAGV,EAAL,EAAKA,MAAMW,EAAX,EAAWA,WAAX,OACT,qBAAalB,UAAWC,IAAEkB,KACzBC,MAAO,CAAEC,gBCPX,OAHCC,KAAKC,MAAsB,IAAhBD,KAAKE,UAGJ,KAFZ,IAAMF,KAAKC,MAAsB,IAAhBD,KAAKE,WAEA,KADtB,GAAKF,KAAKC,MAAsB,IAAhBD,KAAKE,WACW,KDMhC,UAEE,sBAAMxB,UAAWC,IAAEM,MAAnB,SAA2BA,IAC3B,uBAAMP,UAAWC,IAAEiB,WAAnB,UAAgCA,EAAhC,SAHOD,W,oBEPJ,SAASQ,EAAT,GAAkC,IAAZC,EAAW,EAAXA,QACnC,OACE,oBAAI1B,UAAWC,IAAEkB,KAAjB,SACGO,EAAQV,KAAI,gBAAGC,EAAH,EAAGA,GAAIrB,EAAP,EAAOA,OAAQ+B,EAAf,EAAeA,KAAMC,EAArB,EAAqBA,SAArB,OACX,qBAAa5B,UAAWC,IAAEc,KAA1B,UACE,sBACEf,UAAS,UAAKC,IAAE4B,OAAP,YAAiBD,EAAW3B,IAAE6B,MAAQ7B,IAAE8B,OAEnD,qBAAK/B,UAAWC,IAAEL,OAAQQ,IAAKR,EAAQS,IAAKsB,EAAMK,MAAM,OACxD,mBAAGhC,UAAWC,IAAE0B,KAAhB,SAAuBA,MALhBV,Q,oBCJF,SAASgB,EAAT,GAAwC,IAAVC,EAAS,EAATA,MAC3C,OACE,wBAAOlC,UAAWC,IAAEkC,MAApB,UACE,uBAAOnC,UAAWC,IAAEmC,KAApB,SACE,+BACE,sCACA,wCACA,+CAGHF,EAAMlB,KAAI,SAAAD,GAAI,OACb,uBAAOf,UAAWC,IAAEoC,IAApB,SACE,+BACE,6BAAKtB,EAAKuB,OACV,6BAAKvB,EAAKwB,SACV,6BAAKxB,EAAKyB,aAHHzB,EAAKE,YCNT,SAASwB,IACtB,OACE,qBAAKzC,UAAU,MAAf,SACE,oCACE,cAAC,EAAD,CACEL,SAAU+C,EAAM/C,SAChBC,OAAQ8C,EAAM9C,OACdC,IAAK6C,EAAM7C,IACXC,SAAU4C,EAAM5C,SAChBC,MAAO2C,EAAM3C,QAEf,cAACa,EAAD,CAAYC,MAAM,eAAed,MAAO4C,IACxC,cAAClB,EAAD,CAAYC,QAASkB,IACrB,cAACX,EAAD,CAAoBC,MAAOW,S,MCjBnCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACP,EAAD,MAEFQ,SAASC,eAAe,W","file":"static/js/main.05d28f7f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__FsnI4\",\"description\":\"Profile_description__2YyIz\",\"stats\":\"Profile_stats__BEdbK\",\"user\":\"Profile_user__2JXvp\",\"quantity\":\"Profile_quantity__j1923\",\"tag\":\"Profile_tag__2CHVe\",\"location\":\"Profile_location__2SsCx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FriendList_list__-mIP3\",\"red\":\"FriendList_red__30tQI\",\"green\":\"FriendList_green__18BYM\",\"item\":\"FriendList_item__JoEip\",\"avatar\":\"FriendList_avatar__18gu-\",\"name\":\"FriendList_name__okGPd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Statistics_container__EJEnu\",\"title\":\"Statistics_title__2yCwK\",\"list\":\"Statistics_list__12fej\",\"item\":\"Statistics_item__2kIsB\",\"label\":\"Statistics_label__1c5I8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"TransactionHistory_table__3OyUa\",\"head\":\"TransactionHistory_head__jzjjD\",\"row\":\"TransactionHistory_row__2A9CK\"};","import PropTypes from 'prop-types';\r\nimport s from './Profile.module.css';\r\n\r\nconst Profile = ({ username, avatar, tag, location, stats }) => {\r\n  return (\r\n    <div className={s.profile}>\r\n      <div className={s.description}>\r\n        <img src={avatar} alt={username} className={s.avatar} />\r\n        <p className={s.user}>{username}</p>\r\n        <p className={s.tag}>@{tag}</p>\r\n        <p className={s.location}>{location}</p>\r\n      </div>\r\n\r\n      <ul className={s.stats}>\r\n        <li>\r\n          <span className={s.label}>Followers</span>\r\n          <span className={s.quantity}>{stats.followers}</span>\r\n        </li>\r\n        <li>\r\n          <span className={s.label}>Views</span>\r\n          <span className={s.quantity}>{stats.views}</span>\r\n        </li>\r\n        <li>\r\n          <span className={s.label}>Likes</span>\r\n          <span className={s.quantity}>{stats.likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  avatar: PropTypes.string.isRequired,\r\n  username: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  followers: PropTypes.number.isRequired,\r\n  views: PropTypes.number.isRequired,\r\n  likes: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Profile;\r\n","import PropTypes from 'prop-types';\r\nimport randomColor from '../../helpers/colorSwitch'\r\nimport s from  './Statistics.module.css';\r\n\r\nexport default function Statistics({ title, stats }) {\r\n  return (\r\n    <div className={s.container}>\r\n      <h2 className={s.title}>{title}</h2>\r\n      <ul className={s.item}>\r\n        {stats.map(({id,label,percentage} )=> (\r\n          <li key={id} className={s.list}\r\n           style={{ backgroundColor: randomColor() }}>\r\n            <span className={s.label}>{label}</span>\r\n            <span className={s.percentage}>{percentage}%</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  data: PropTypes.arrayOf(PropTypes.shape({ id: PropTypes.string })),\r\n  label: PropTypes.string,\r\n  percentage: PropTypes.number,\r\n};\r\n","export default function randomColor() {\n  let r = Math.floor(Math.random() * 256);\n  let g = 100 + Math.floor(Math.random() * 256);\n  let b = 50 + Math.floor(Math.random() * 256);\n  return 'rgb(' + r + ',' + g + ',' + b + ')';\n}\n","import PropTypes from 'prop-types';\nimport s from './FriendList.module.css';\n\nexport default function FriendList({ friends }) {\n  return (\n    <ul className={s.list}>\n      {friends.map(({ id, avatar, name, isOnline }) => (\n        <li key={id} className={s.item}>\n          <span\n            className={`${s.status} ${isOnline ? s.green : s.red}`}\n          />\n          <img className={s.avatar} src={avatar} alt={name} width=\"48\" />\n          <p className={s.name}>{name}</p>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(PropTypes.shape({ id: PropTypes.number })),\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './TransactionHistory.module.css';\n\nexport default function TransactionHistory({ items }) {\n  return (\n    <table className={s.table}>\n      <thead className={s.head}>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n      {items.map(item => (\n        <tbody className={s.row}>\n          <tr key={item.id}>\n            <td>{item.type}</td>\n            <td>{item.amount}</td>\n            <td>{item.currency}</td>\n          </tr>\n        </tbody>\n      ))}\n    </table>\n  );\n}\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape({ id: PropTypes.number })),\n  type: PropTypes.string.isRequired,\n  amount: PropTypes.number.isRequired,\n  currency: PropTypes.string.isRequired,\n};\n","import users from '../../data/user.json';\nimport data from '../../data/data.json';\nimport friend from '../../data/friends.json';\nimport transactions from '../../data/transactions.json';\nimport Profile from '../Profile/Profile.jsx';\nimport Statistics from '../Statictics/Statistics.jsx';\nimport FriendList from '../FriendList/FiendsList';\nimport TransactionHistory from '../TransactionHistory/TransactionHistory';\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <section>\n        <Profile\n          username={users.username}\n          avatar={users.avatar}\n          tag={users.tag}\n          location={users.location}\n          stats={users.stats}\n        />\n        <Statistics title=\"Upload stats\" stats={data} />\n        <FriendList friends={friend} />\n        <TransactionHistory items={transactions} />\n      </section>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App.jsx';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}